
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/project.h.in ${GENERATED_SOURCE_DIR}/project.h)

INCLUDE(source_groups.cmake)

INCLUDE(default_files.cmake)

INCLUDE(voice_rec.cmake)

INCLUDE(glloadgen.cmake)

ADD_LIBRARY(code STATIC
	${file_root}
	${DEF_OUT_FILES}
	${VOICE_REC_FILES}
	${GLLOADGEN_FILES}
)

target_compile_definitions(code PRIVATE "$<$<CONFIG:RELEASE>:NDEBUG>;$<$<CONFIG:DEBUG>:_DEBUG;$<$<CXX_COMPILER_ID:MSVC>:PDB_DEBUGGING=1>>")

TARGET_INCLUDE_DIRECTORIES(code PUBLIC ${CODE_HEADERS})
TARGET_INCLUDE_DIRECTORIES(code PUBLIC ${FREESPACE_HEADERS})

TARGET_INCLUDE_DIRECTORIES(code PRIVATE ${GENERATED_SOURCE_DIR})
TARGET_INCLUDE_DIRECTORIES(code PRIVATE ${GENERATED_SOURCE_DIR}/code)
TARGET_INCLUDE_DIRECTORIES(code PRIVATE "${COMPILER_INCLUDES}")
TARGET_INCLUDE_DIRECTORIES(code PRIVATE "${PLATFORM_INCLUDES}")

TARGET_LINK_LIBRARIES(code ${OPENAL_LIBS})
TARGET_LINK_LIBRARIES(code ${LUA_LIBS})
TARGET_LINK_LIBRARIES(code ${PNG_LIBS})
TARGET_LINK_LIBRARIES(code ${JPEG_LIBS})

TARGET_LINK_LIBRARIES(code ${OGG_LIBS})
TARGET_LINK_LIBRARIES(code ${VORBIS_LIBS})
TARGET_LINK_LIBRARIES(code ${VORBISFILE_LIBS})
TARGET_LINK_LIBRARIES(code ${THEORA_LIBS})

TARGET_LINK_LIBRARIES(code ${SDL_LIBS})

TARGET_LINK_LIBRARIES(code "${PLATFORM_LBRARIES}")
TARGET_LINK_LIBRARIES(code "${COMPILER_LBRARIES}")

IF (FSO_USE_SPEECH)
	TARGET_LINK_LIBRARIES(code ${SPEECH_LIBRARIES})
	ADD_DEFINITIONS(-DFS2_SPEECH)
ENDIF(FSO_USE_SPEECH)

# Headers for standalone "gui" on UNIX
IF(UNIX)
	TARGET_LINK_LIBRARIES(code ${JANSSON_LIBS})
	TARGET_LINK_LIBRARIES(code ${MONGOOSE_LIBS})
ENDIF(UNIX)

IF(FSO_BUILD_TOOLS)
	ADD_SUBDIRECTORY(cfilearchiver)
	
	ADD_SUBDIRECTORY(cfileextractor)
ENDIF(FSO_BUILD_TOOLS)

IF(COTIRE_ENABLE)
	# Disable unity build as it doesn't work well for us
	set_target_properties(code PROPERTIES COTIRE_ADD_UNITY_BUILD FALSE)

	IF(DEFINED CMAKE_CONFIGURATION_TYPES)
		cotire(code CONFIGURATIONS ${CMAKE_CONFIGURATION_TYPES})
	ELSE(DEFINED CMAKE_CONFIGURATION_TYPES)
		cotire(code)
	ENDIF(DEFINED CMAKE_CONFIGURATION_TYPES)
ENDIF(COTIRE_ENABLE)
