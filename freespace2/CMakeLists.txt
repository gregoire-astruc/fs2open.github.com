
SET(FREESPACE_SRC freespace.cpp
				levelpaging.cpp
				freespace.h
				levelpaging.h
				freespace.rc)
				
IF(FSO_BUILD_PACKAGE)
	IF(FSO_INSTRUCTION_SET STREQUAL "SSE2" OR FSO_INSTRUCTION_SET STREQUAL "AVX")
		SET(FSO_INSTALLER_ICON "${CMAKE_CURRENT_SOURCE_DIR}/V_sse.ico" CACHE FILEPATH "The path of the installer icon")
	ELSE()
		SET(FSO_INSTALLER_ICON "${CMAKE_CURRENT_SOURCE_DIR}/V_app.ico" CACHE FILEPATH "The path of the installer icon")
	ENDIF()
ENDIF(FSO_BUILD_PACKAGE)

IF(MSVC60)
	link_directories(${STLPORT_INCLUDE_LIB_DIRS})
ENDIF(MSVC60)

ADD_EXECUTABLE(Freespace2 ${EXE_GUI_TYPE} ${FREESPACE_SRC})
		   
SET_TARGET_PROPERTIES(Freespace2 PROPERTIES DEBUG_POSTFIX "-DEBUG")

target_compile_definitions(Freespace2 PRIVATE "$<$<CONFIG:RELEASE>:NDEBUG>;$<$<CONFIG:DEBUG>:_DEBUG;$<$<CXX_COMPILER_ID:MSVC>:PDB_DEBUGGING=1>>")

SET_TARGET_PROPERTIES(Freespace2 PROPERTIES OUTPUT_NAME "fs2_open_${FSO_BINARY_SUFFIX}")

set_source_files_properties(fred.rc PROPERTIES LANGUAGE RC)
SET_SOURCE_FILES_PROPERTIES(freespace.rc PROPERTIES COMPILE_DEFINITIONS "_VC08")

IF(FSO_INSTRUCTION_SET STREQUAL "SSE2" OR FSO_INSTRUCTION_SET STREQUAL "AVX")
	SET_SOURCE_FILES_PROPERTIES(freespace.rc PROPERTIES COMPILE_DEFINITIONS "_VC08;_SSE2")
ENDIF()

TARGET_LINK_LIBRARIES(Freespace2 code)
TARGET_LINK_LIBRARIES(Freespace2 ${PLATFORM_LBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${COMPILER_LBRARIES})

IF(WIN32)
	# Link sdl main only here as it interferes with fred
	TARGET_LINK_LIBRARIES(Freespace2 sdlmain)
ENDIF(WIN32)

IF (FSO_USE_SPEECH)
	TARGET_LINK_LIBRARIES(Freespace2 ${SPEECH_LIBRARIES})
	INCLUDE_DIRECTORIES(${SPEECH_INCLUDE_DIRS})
	ADD_DEFINITIONS(-DFS2_SPEECH)
ENDIF(FSO_USE_SPEECH)

IF(FSO_USE_VOICEREC)
	ADD_DEFINITIONS(-DFS2_VOICER)
ENDIF(FSO_USE_VOICEREC)

INCLUDE_DIRECTORIES(${COMPILER_INCLUDES})
INCLUDE_DIRECTORIES(${PLATFORM_INCLUDES})
INCLUDE_DIRECTORIES(${FREESPACE_HEADERS})
INCLUDE_DIRECTORIES(${GENERATED_SOURCE_DIR})

IF(USE_STLPORT)
	INCLUDE_DIRECTORIES(BEFORE SYSTEM ${STLPORT_INCLUDE_DIRS})
ENDIF(USE_STLPORT)

# Add install script to copy the executable to the FreeSpace path if possible and wanted
INSTALL(
	TARGETS Freespace2
	RUNTIME DESTINATION ${BINARY_DESTINATION}
	BUNDLE DESTINATION ${BINARY_DESTINATION}
	CONFIGURATIONS Debug Release
)

INCLUDE(util)
COPY_FILES_TO_TARGET(Freespace2)

include(CreateLaunchers)
create_target_launcher(Freespace2
	WORKING_DIRECTORY ${FSO_FREESPACE_PATH}
	ARGS ${FSO_RUN_ARGUMENTS})
